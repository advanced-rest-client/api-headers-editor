{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-headers-editor`\nAn element to render headers edior based on AMF data model.\n\nBy default it renders headers form. The user has an option to switch to\nsource editing mode. `code-mirror` element is used in the later case.\n\n## AMF data model\n\nThis element renders pre-configured form of headers based on\n[AMF's](https://github.com/mulesoft/amf) json/ld data model.\nFrom the model select `http://raml.org/vocabularies/http#header`\nnode which contains list of headers defined for current object\n(it can be method, trait, security scheme etc).\nThe model is resolved to internal data model by `api-view-model-transformer`\nelement.\n\n### Example\n\n```html\n<api-headers-editor id=\"editor\"></api-headers-editor>\n<script>\nlet data = await getAmfModel();\ndata = data[0]['http://raml.org/vocabularies/document#encodes'][0];\ndata = data['http://raml.org/vocabularies/http#endpoint'][0];\ndata = data['http://www.w3.org/ns/hydra/core#supportedOperation'][0];\ndata = data['http://www.w3.org/ns/hydra/core#expects'][0];\ndata = data['http://raml.org/vocabularies/http#header'];\n(first endpoint, first method, headers array)\neditor.amfModel = data;\neditor.addEventListener('value-changed', (e) => console.log(e.detail.value));\n< /script>\n```",
      "summary": "",
      "path": "api-headers-editor.html",
      "properties": [
        {
          "name": "isPayload",
          "type": "boolean",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "eventsTarget",
          "type": "Object",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\""
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "amfHeaders",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 10
            },
            "end": {
              "line": 89,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "Headers value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "viewModel",
          "type": "Array",
          "description": "Generated view model fore the headers from `amfModel`.\nThis is automatically set when `amfModel` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 10
            },
            "end": {
              "line": 105,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_viewModelChanged\""
            }
          }
        },
        {
          "name": "contentType",
          "type": "Stirng",
          "description": "Value of a Content-Type header.\nWhen this value change then editor update the value for the content type. However,\nto change a single header value, please, use `request-headers-changed` event with `name`\nand `value` properties set on the detail object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onContentTypeChanged\""
            }
          }
        },
        {
          "name": "narrow",
          "type": "boolean",
          "description": "If set it will renders the view in the narrow layout.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_narrowChanged\""
            }
          }
        },
        {
          "name": "sourceMode",
          "type": "boolean",
          "description": "When set to true then the source edit mode is enabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_sourceModeChanged\""
            }
          }
        },
        {
          "name": "disallowCustom",
          "type": "boolean",
          "description": "If set, custom headers won't be available in form mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 138,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_disallowCustomChanged\""
            }
          }
        },
        {
          "name": "_transformerTarget",
          "type": "Object",
          "description": "Events target for tranformer",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 145,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_contentTypeRe",
          "type": "Object",
          "description": "Regexp to search for content type value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 10
            },
            "end": {
              "line": 152,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "filterHeaders",
          "description": "Filter array of headers and return not duplicated array of the same headers.\nDuplicated headers should be appended to already found one using coma separator.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "Headers array to filter. All objects in headers array must have \"name\"\n               and \"value\" keys."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "An array of filtered headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToString",
          "description": "Parse headers array to Raw HTTP headers string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersArray",
              "type": "(Array | String | Headers)",
              "description": "List of objects with \"name\" and \"value\"\nproperties."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A HTTP representation of the headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headerItemToString",
          "description": "Transforms a header model item to a string.\nArray values are supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "header",
              "type": "Object",
              "description": "Object with name and value."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated headers line"
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToJSON",
          "description": "Parse HTTP headers input from string to array of objects containing `name` and `value`\nproperties.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(String | Headers)",
              "description": "Raw HTTP headers input or Headers object"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "The array of objects where properties are `name` as a header\nname and `value` as a header content."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_headersStringToJSON",
          "description": "Parse headers string to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersString"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_hedersToJSON",
          "description": "Parse Headers object to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_oldCombine",
          "description": "Helper method for old system: combine headers list with encoding value.\nNote that this function will update the original array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "An array of headers"
            },
            {
              "name": "encoding",
              "type": "String",
              "description": "An encoding string from the old request."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if encoding has been added to the array."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getContentType",
          "description": "Get the Content-Type value from the headers.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String)",
              "description": "Either HTTP headers string or list of headers."
            }
          ],
          "return": {
            "type": "(String | null)",
            "desc": "A content-type header value or null if not found"
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "replaceHeaderValue",
          "description": "Replace value for given header in the headers list.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String | Object)",
              "description": "A headers object. Can be string, array of objects or\nHeaders object."
            },
            {
              "name": "name",
              "type": "String",
              "description": "Header name to be replaced."
            },
            {
              "name": "value",
              "type": "String",
              "description": "Header value to be repleced."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Updated headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getHeaderError",
          "description": "Get error message for given header string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "(Header | Array | String)",
              "description": "A headers to check."
            }
          ],
          "return": {
            "type": "?String",
            "desc": "An error message or null if the headers are valid."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ready",
          "description": "Sets up editor when ready to manipulate DOM.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "createForm",
          "description": "Creates a form editor and places it in the local DOM.\nThis does nothing if the element hasn't been yet initialized",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "formEditor",
          "description": "Searches the DOM for the form editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(ApiHeadersEditor | undefined)",
            "desc": "Editor or undefined if not set."
          }
        },
        {
          "name": "removeForm",
          "description": "Removes references to the form editor.\nIt removes event listeners and removes the form editor from local DOM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateFormModel",
          "description": "Updates model data on form element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "New model"
            }
          ]
        },
        {
          "name": "_updateFormNarrow",
          "description": "Updates form editor `narrow` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "narrow",
              "type": "Boolean",
              "description": "New value"
            }
          ]
        },
        {
          "name": "createCodeMirror",
          "description": "Creates a code mirror editor and places it in the local DOM.\nThis does nothing if the element hasn't been yet initialized",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "codeMirror",
          "description": "Searches the DOM for the CodeMirror editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(CodeMirrorElement | undefined)",
            "desc": "Editor or undefined if not set."
          }
        },
        {
          "name": "removeCodeMirror",
          "description": "Removes references to the CodeMirror editor.\nIt removes event listeners and removes the editor from local DOM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 283,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateCmModel",
          "description": "Updates model data on the `code-mirror` element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "New model"
            }
          ]
        },
        {
          "name": "_updateCmNarrow",
          "description": "Updates Code Mirror editor `narrow` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "narrow",
              "type": "Boolean",
              "description": "New value"
            }
          ]
        },
        {
          "name": "_formValueChanged",
          "description": "Updates the value when form data editor's value change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 314,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_cmValueChanged",
          "description": "Updates the value when CodeMirror editor's value change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_viewModelChanged",
          "description": "Handler for `viewModel` change.\nUpdates currently opened editor.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 334,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "New model"
            }
          ]
        },
        {
          "name": "_narrowChanged",
          "description": "Handler for `narrow` change.\nUpdates currently opened editor.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "narrow",
              "type": "Boolean",
              "description": "New value"
            }
          ]
        },
        {
          "name": "_disallowCustomChanged",
          "description": "Updates `disallowCustom` on form editor.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state",
              "type": "Boolean",
              "description": "New state of property"
            }
          ]
        },
        {
          "name": "modelToValue",
          "description": "Creates a headers string from a model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 6
            },
            "end": {
              "line": 383,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Array",
              "description": "Optional, model to process. If not set it uses\n`this.viewModel`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated headers"
          }
        },
        {
          "name": "_cmKeysHandler",
          "description": "Code mirror's ctrl+space key handler.\nOpens headers fill support.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 6
            },
            "end": {
              "line": 395,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cm",
              "type": "Object",
              "description": "Code mirror instance."
            }
          ]
        },
        {
          "name": "_sourceModeChanged",
          "description": "Handler for `sourceMode` change.\n\nOpens desired editr.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 6
            },
            "end": {
              "line": 410,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSource",
              "type": "Boolean"
            }
          ]
        },
        {
          "name": "_modelFromValue",
          "description": "Called when switching from source view to form view.\nUpdates view model with values defined in text editor.\n\nOnly headers existing in `value` are going to be present in the model.\nOtherwise headers will be disabled.\n\nIt does nothing if `value` or `viewModel` is not defined.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 6
            },
            "end": {
              "line": 463,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_findModelIndex",
          "description": "Finds item position in model by name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 6
            },
            "end": {
              "line": 473,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Model items"
            },
            {
              "name": "name",
              "type": "String",
              "description": "Header name to search for"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Items position or `-1` if not found."
          }
        },
        {
          "name": "createCustom",
          "description": "Creates a custom header model item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 6
            },
            "end": {
              "line": 491,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "defaults",
              "type": "Object",
              "description": "Default data"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "View model item"
          }
        },
        {
          "name": "_headersChangedHandler",
          "description": "Handler tor the `request-headers-changed` event.\nUpdates the editor value to the value of the event detail object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 6
            },
            "end": {
              "line": 506,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` event.\nIt updates value for a single header.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 511,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_detectContentType",
          "description": "Detects and sets content type value from changed headers value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 6
            },
            "end": {
              "line": 564,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "Headers new value."
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "Called by CodeMirror editor.\nWhen something change n the headers list, detect content type header.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 6
            },
            "end": {
              "line": 583,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_onContentTypeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 6
            },
            "end": {
              "line": 618,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentCt"
            }
          ]
        },
        {
          "name": "_notifyContentType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 620,
              "column": 6
            },
            "end": {
              "line": 630,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_setValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 6
            },
            "end": {
              "line": 644,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_copyToClipboard",
          "description": "Coppies current response text value to clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 649,
              "column": 6
            },
            "end": {
              "line": 660,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetCopyButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 662,
              "column": 6
            },
            "end": {
              "line": 664,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "button"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 85,
          "column": 4
        },
        "end": {
          "line": 665,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiHeadersEditor",
      "attributes": [
        {
          "name": "is-payload",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "amf-headers",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 10
            },
            "end": {
              "line": 89,
              "column": 27
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "value",
          "description": "Headers value.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 97,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "view-model",
          "description": "Generated view model fore the headers from `amfModel`.\nThis is automatically set when `amfModel` is set.",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 10
            },
            "end": {
              "line": 105,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "content-type",
          "description": "Value of a Content-Type header.\nWhen this value change then editor update the value for the content type. However,\nto change a single header value, please, use `request-headers-changed` event with `name`\nand `value` properties set on the detail object.",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Stirng"
        },
        {
          "name": "narrow",
          "description": "If set it will renders the view in the narrow layout.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 10
            },
            "end": {
              "line": 126,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "source-mode",
          "description": "When set to true then the source edit mode is enabled",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disallow-custom",
          "description": "If set, custom headers won't be available in form mode.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 138,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "content-type-changed",
          "description": "Fired when the `contentType` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content-actions",
          "range": {
            "file": "api-headers-editor.html",
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 38,
              "column": 44
            }
          }
        }
      ],
      "tagname": "api-headers-editor",
      "mixins": [
        "ArcBehaviors.HeadersParserBehavior",
        "ArcBehaviors.EventsTargetBehavior"
      ]
    }
  ]
}
